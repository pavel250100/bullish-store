plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    alias(libs.plugins.spring.boot)
}

group 'bullish.store'
version '1.0'

repositories {
    mavenCentral()
}

application {
    mainClass.set("bullish.store.StoreApplication")
}

dependencies {
    implementation libs.log4j.slf4j
    implementation libs.logback
    implementation libs.bundles.spring
    implementation libs.bundles.jwt
    testImplementation 'junit:junit:4.13.1'

    runtimeOnly libs.h2

    compileOnly libs.lombok
    annotationProcessor libs.lombok

    // tests
    testImplementation testLibs.jupiter.api
    testImplementation testLibs.bundles.spring.test
    testImplementation testLibs.mockito.inline
    testImplementation testLibs.bundles.cucumber
    testRuntimeOnly testLibs.jupiter.engine
    testRuntimeOnly libs.h2
}

test {
    useJUnitPlatform()

    testLogging {
        events("failed")
        showExceptions = true
        showCauses = true
        showStackTraces = true
        exceptionFormat = "full"
    }

    reports {
        junitXml.required = true
    }

    beforeTest { descriptor ->
        logger.lifecycle("Running test: $descriptor")
    }

    afterSuite { desc, result ->
        if (desc.parent == null) {
            println "Testing Finished - Results: ${result.resultType} " +
                    "(${result.testCount} tests, " +
                    "${result.successfulTestCount} successes, " +
                    "${result.failedTestCount} failures, " +
                    "${result.skippedTestCount} skipped)"
        }
    }

    minHeapSize = "2048m"
    maxHeapSize = "4096m"
    jvmArgs "-Duser.timezone=Asia/Hong_Kong"
}

java {
    sourceCompatibility = "17"
    targetCompatibility = "17"
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required = true
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
