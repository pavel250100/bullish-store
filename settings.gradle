rootProject.name = 'bullish-store'

// central place for all dependencies which are shared with the same version between modules
def springVersion = "3.1.2"
def jwtVersion = "0.11.5"
def cucumberVersion = "7.13.0"

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // logging
            library("logback", "ch.qos.logback", "logback-classic").version("1.4.5")
            library("log4j-slf4j", "org.apache.logging.log4j", "log4j-to-slf4j").version("2.19.0")

            // spring
            plugin("spring.boot", "org.springframework.boot").version(springVersion)
            library("spring.web", "org.springframework.boot", "spring-boot-starter-web").version(springVersion)
            library("spring.data.jpa", "org.springframework.boot", "spring-boot-starter-data-jpa").version(springVersion)
            library("spring.hateoas", "org.springframework.boot", "spring-boot-starter-hateoas").version(springVersion)
            library("spring.security", "org.springframework.boot", "spring-boot-starter-security").version(springVersion)
            library("spring.parent", "org.springframework.boot", "spring-boot-starter-parent").version(springVersion)
            bundle("spring", ["spring.web", "spring.data.jpa", "spring.hateoas", "spring.security", "spring.parent"])

            // jwt
            library("jwt.impl", "io.jsonwebtoken", "jjwt-impl").version(jwtVersion)
            library("jwt.api", "io.jsonwebtoken", "jjwt-api").version(jwtVersion)
            library("jwt.jackson", "io.jsonwebtoken", "jjwt-jackson").version(jwtVersion)
            bundle("jwt", ["jwt.impl", "jwt.api", "jwt.jackson"])

            // database
            library("h2", "com.h2database", "h2").version("2.2.220")

            // utils
            library("lombok", "org.projectlombok", "lombok").version("1.18.28")
        }
        testLibs {
            def junitVersion = version("junit.version", "5.8.1")
            library("jupiter.api", "org.junit.jupiter", "junit-jupiter-api").versionRef(junitVersion)
            library("jupiter.engine", "org.junit.jupiter", "junit-jupiter-engine").versionRef(junitVersion)
            library("mockito.inline", "org.mockito", "mockito-inline").version("5.2.0")

            library("junit", "junit", "junit").version("4.13.1")

            // spring test
            library("spring.security.test", "org.springframework.security", "spring-security-test").version("6.1.2")
            library("spring.boot", "org.springframework.boot", "spring-boot-starter-test").version(springVersion)
            bundle("spring.test", ["spring.security.test", "spring.boot"])

            // cucumber
            library("cucumber.java", "io.cucumber", "cucumber-java").version(cucumberVersion)
            library("cucumber.junit", "io.cucumber", "cucumber-junit").version(cucumberVersion)
            library("cucumber.spring", "io.cucumber", "cucumber-spring").version(cucumberVersion)
            bundle("cucumber", ["cucumber.java", "cucumber.junit"])
        }
    }
}
